{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactApp\\\\preschoolapp\\\\src\\\\components\\\\QueriesComponent.js\";\nimport React from 'react';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Row, Button, Label } from 'reactstrap';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Queries extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values) {\n    console.log(this.props);\n    alert(\"Query submitted\" + JSON.stringify(values));\n    this.sendQuery(values.name, values.email, values.message);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \".name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Your Name:\"), React.createElement(Control.text, {\n      model: \".name\",\n      id: \"name\",\n      className: \"form-control\",\n      placeholder: \"Your Name\",\n      validators: {\n        required,\n        minLength: minLength(2),\n        maxLength: maxLength(15)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".name\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: 'Name should atleast contain 2 characters',\n        maxLength: 'Name can maximum 15 characters'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \".email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(Control.text, {\n      model: \".email\",\n      id: \"email\",\n      className: \"form-control\",\n      placeholder: \"Email\",\n      validators: {\n        required,\n        validEmail\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".email\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        validEmail: 'Please enter valid email address'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \".message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Message:\"), React.createElement(Control.textarea, {\n      model: \".message\",\n      id: \"message\",\n      className: \"form-control\",\n      placeholder: \"Message\",\n      rows: \"6\",\n      validators: {\n        required,\n        minLength: minLength(5),\n        maxLength: maxLength(200)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".message\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: 'Name should atleast contain 5 characters',\n        maxLength: 'Name can maximum 200 characters'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default Queries;","map":{"version":3,"sources":["D:/ReactApp/preschoolapp/src/components/QueriesComponent.js"],"names":["React","Control","LocalForm","Errors","Row","Button","Label","required","val","length","maxLength","len","minLength","validEmail","test","Queries","Component","constructor","props","handleSubmit","bind","values","console","log","alert","JSON","stringify","sendQuery","name","email","message","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport {Row, Button, Label} from 'reactstrap';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Queries extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n   handleSubmit(values) {\r\n    console.log(this.props);\r\n\r\n       alert(\"Query submitted\" + JSON.stringify(values));\r\n      \r\n       this.sendQuery(values.name, values.email, values.message);\r\n       \r\n   }\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor = \".name\">Your Name:</Label>\r\n                        <Control.text model=\".name\" id=\"name\" className=\"form-control\" placeholder=\"Your Name\"\r\n                        validators = {{required, minLength : minLength(2), maxLength: maxLength(15)}} />\r\n                        <Errors className=\"text-danger\"\r\n                            model=\".name\" \r\n                            show=\"touched\"\r\n                            messages = {{\r\n                                required : 'Required',\r\n                                minLength : 'Name should atleast contain 2 characters',\r\n                                maxLength : 'Name can maximum 15 characters'\r\n                            }}/>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor = \".email\">Email:</Label>\r\n                        <Control.text model=\".email\" id=\"email\" className=\"form-control\" placeholder=\"Email\"\r\n                        validators = {{required,validEmail }} />\r\n                        <Errors className=\"text-danger\"\r\n                            model=\".email\" \r\n                            show=\"touched\"\r\n                            messages = {{\r\n                                required : 'Required',\r\n                                validEmail : 'Please enter valid email address'\r\n                            }}/>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor = \".message\">Message:</Label>\r\n                        <Control.textarea model=\".message\" id=\"message\" className=\"form-control\" placeholder=\"Message\" rows=\"6\"\r\n                        validators = {{required, minLength : minLength(5), maxLength: maxLength(200)}} />\r\n                        <Errors className=\"text-danger\"\r\n                            model=\".message\" \r\n                            show=\"touched\"\r\n                            messages = {{\r\n                                required : 'Required',\r\n                                minLength : 'Name should atleast contain 5 characters',\r\n                                maxLength : 'Name can maximum 200 characters'\r\n                            }}/>\r\n                    </Row>\r\n\r\n                    <Row className=\"form-group\">\r\n                        <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                    </Row>\r\n                </LocalForm>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Queries;"]},"metadata":{},"sourceType":"module"}