{"ast":null,"code":"import { baseurl } from '../shared/baseurl';\nimport * as ActionTypes from './ActionTypes';\nexport const addAbout = about => ({\n  type: ActionTypes.ADD_ABOUT,\n  payload: about\n});\nexport const aboutLoading = () => ({\n  type: ActionTypes.ABOUT_LOADING\n});\nexport const aboutFailed = errmess => ({\n  type: ActionTypes.ABOUT_FAILED,\n  payload: errmess\n});\nexport const fetchAbout = () => dispatch => {\n  dispatch(aboutLoading);\n  return fetch(baseurl + 'aboutus').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(about => dispatch(addAbout(about))).catch(error => dispatch(aboutFailed(error.message)));\n};\nexport const contactLoading = () => ({\n  type: ActionTypes.CONTACT_LOADING\n});\nexport const contactFailed = error => ({\n  type: ActionTypes.CONTACT_FAILED,\n  payload: error\n});\nexport const addContact = contact => ({\n  type: ActionTypes.ADD_CONTACT,\n  payload: contact\n});\nexport const fetchContact = () => dispatch => {\n  contactLoading();\n  fetch(baseurl + 'contactus').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(contact => dispatch(addContact(contact))).catch(error => dispatch(contactFailed(error.message)));\n};","map":{"version":3,"sources":["D:/ReactApp/preschoolapp/src/redux/ActionCreators.js"],"names":["baseurl","ActionTypes","addAbout","about","type","ADD_ABOUT","payload","aboutLoading","ABOUT_LOADING","aboutFailed","errmess","ABOUT_FAILED","fetchAbout","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","json","catch","contactLoading","CONTACT_LOADING","contactFailed","CONTACT_FAILED","addContact","contact","ADD_CONTACT","fetchContact"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,mBAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,KAAY;AAChCC,EAAAA,IAAI,EAAGH,WAAW,CAACI,SADa;AAEhCC,EAAAA,OAAO,EAAGH;AAFsB,CAAZ,CAAjB;AAKP,OAAO,MAAMI,YAAY,GAAG,OAAO;AAC/BH,EAAAA,IAAI,EAACH,WAAW,CAACO;AADc,CAAP,CAArB;AAIP,OAAO,MAAMC,WAAW,GAAIC,OAAD,KAAc;AACrCN,EAAAA,IAAI,EAACH,WAAW,CAACU,YADoB;AAErCL,EAAAA,OAAO,EAACI;AAF6B,CAAd,CAApB;AAKP,OAAO,MAAME,UAAU,GAAG,MAAOC,QAAD,IAAc;AAC1CA,EAAAA,QAAQ,CAACN,YAAD,CAAR;AAEA,SAAOO,KAAK,CAACd,OAAO,GAAG,SAAX,CAAL,CACFe,IADE,CACGC,QAAQ,IAAI;AACd,QAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,aAAOD,QAAP;AACH,KAFD,MAGK;AACD,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAUH,QAAQ,CAACI,MAAnB,GAA4B,IAA5B,GAAmCJ,QAAQ,CAACK,UAAtD,CAAZ;AACA,YAAMH,KAAN;AACH;AACJ,GATE,EASAA,KAAK,IAAI;AACR,QAAIR,OAAO,GAAG,IAAIS,KAAJ,CAAUD,KAAK,CAACI,OAAhB,CAAd;AACA,UAAMZ,OAAN;AACH,GAZE,EAaFK,IAbE,CAaGC,QAAQ,IAAIA,QAAQ,CAACO,IAAT,EAbf,EAcFR,IAdE,CAcGZ,KAAK,IAAIU,QAAQ,CAACX,QAAQ,CAACC,KAAD,CAAT,CAdpB,EAeFqB,KAfE,CAeIN,KAAK,IAAIL,QAAQ,CAACJ,WAAW,CAACS,KAAK,CAACI,OAAP,CAAZ,CAfrB,CAAP;AAgBH,CAnBM;AAsBP,OAAO,MAAMG,cAAc,GAAG,OAAO;AACjCrB,EAAAA,IAAI,EAAEH,WAAW,CAACyB;AADe,CAAP,CAAvB;AAIP,OAAO,MAAMC,aAAa,GAAIT,KAAD,KAAY;AACrCd,EAAAA,IAAI,EAAEH,WAAW,CAAC2B,cADmB;AAErCtB,EAAAA,OAAO,EAAEY;AAF4B,CAAZ,CAAtB;AAKP,OAAO,MAAMW,UAAU,GAAIC,OAAD,KAAc;AACpC1B,EAAAA,IAAI,EAAEH,WAAW,CAAC8B,WADkB;AAEpCzB,EAAAA,OAAO,EAACwB;AAF4B,CAAd,CAAnB;AAKP,OAAO,MAAME,YAAY,GAAG,MAAOnB,QAAD,IAAc;AAC5CY,EAAAA,cAAc;AAEdX,EAAAA,KAAK,CAACd,OAAO,GAAG,WAAX,CAAL,CACKe,IADL,CACUC,QAAQ,IAAI;AACd,QAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZ,aAAOD,QAAP;AACH,KAFD,MAGK;AACD,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACA,YAAMH,KAAN;AACH;AACJ,GATL,EASOA,KAAK,IAAI;AACR,QAAIR,OAAO,GAAG,IAAIS,KAAJ,CAAUD,KAAK,CAACI,OAAhB,CAAd;AACA,UAAMZ,OAAN;AACH,GAZL,EAaKK,IAbL,CAaUC,QAAQ,IAAIA,QAAQ,CAACO,IAAT,EAbtB,EAcKR,IAdL,CAcUe,OAAO,IAAIjB,QAAQ,CAACgB,UAAU,CAACC,OAAD,CAAX,CAd7B,EAeKN,KAfL,CAeWN,KAAK,IAAIL,QAAQ,CAACc,aAAa,CAACT,KAAK,CAACI,OAAP,CAAd,CAf5B;AAgBH,CAnBM","sourcesContent":["import {baseurl} from '../shared/baseurl';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const addAbout = (about) => ({\r\n    type : ActionTypes.ADD_ABOUT,\r\n    payload : about\r\n});\r\n\r\nexport const aboutLoading = () => ({\r\n    type:ActionTypes.ABOUT_LOADING\r\n});\r\n\r\nexport const aboutFailed = (errmess) => ({\r\n    type:ActionTypes.ABOUT_FAILED,\r\n    payload:errmess\r\n});\r\n\r\nexport const fetchAbout = () => (dispatch) => {\r\n    dispatch(aboutLoading);\r\n\r\n    return fetch(baseurl + 'aboutus')\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response;\r\n            }                \r\n            else {\r\n                var error = new Error('Error '+ response.status + ': ' + response.statusText);\r\n                throw error;\r\n            }\r\n        }, error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(about => dispatch(addAbout(about)))\r\n        .catch(error => dispatch(aboutFailed(error.message)));\r\n}\r\n\r\n\r\nexport const contactLoading = () => ({\r\n    type: ActionTypes.CONTACT_LOADING\r\n});\r\n\r\nexport const contactFailed = (error) => ({\r\n    type: ActionTypes.CONTACT_FAILED,\r\n    payload: error\r\n});\r\n\r\nexport const addContact = (contact) => ({\r\n    type: ActionTypes.ADD_CONTACT,\r\n    payload:contact\r\n});\r\n\r\nexport const fetchContact = () => (dispatch) => {\r\n    contactLoading()\r\n\r\n    fetch(baseurl + 'contactus')\r\n        .then(response => {\r\n            if(response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                throw error;                \r\n            }\r\n        }, error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(contact => dispatch(addContact(contact)))\r\n        .catch(error => dispatch(contactFailed(error.message)));\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}