{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactApp\\\\preschoolapp\\\\src\\\\components\\\\QueriesComponent.js\";\nimport React from 'react';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Row, Button } from 'reactstrap';\n\nclass Queries extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values) {\n    alert(\"Query submitted\" + JSON.stringify(values));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".name\",\n      id: \"name\",\n      className: \"form-control\",\n      placeholder: \"Your Name\",\n      validators: {\n        required,\n        minLength: minLength(2),\n        maxLength: maxLength(15)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".name\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: 'Name should atleast contain 2 characters',\n        maxLength: 'Name can maximum 15 characters'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      className: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Queries;","map":{"version":3,"sources":["D:/ReactApp/preschoolapp/src/components/QueriesComponent.js"],"names":["React","Control","LocalForm","Errors","Row","Button","Queries","Component","constructor","props","handleSubmit","bind","values","alert","JSON","stringify","render","required","minLength","maxLength"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,SAAjB,EAA4BC,MAA5B,QAAyC,kBAAzC;AACA,SAAQC,GAAR,EAAaC,MAAb,QAA0B,YAA1B;;AAEA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACF,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACFD,EAAAA,YAAY,CAACE,MAAD,EAAS;AACjBC,IAAAA,KAAK,CAAC,oBAAoBC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAArB,CAAL;AACH;;AACAI,EAAAA,MAAM,GAAE;AACJ,WACI,0CACI,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAGJ,MAAD,IAAY,KAAKF,YAAL,CAAkBE,MAAlB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,OAAD,CAAS,IAAT;AAAc,MAAA,KAAK,EAAC,OAApB;AAA4B,MAAA,EAAE,EAAC,MAA/B;AAAsC,MAAA,SAAS,EAAC,cAAhD;AAA+D,MAAA,WAAW,EAAC,WAA3E;AACA,MAAA,UAAU,EAAI;AAACK,QAAAA,QAAD;AAAWC,QAAAA,SAAS,EAAGA,SAAS,CAAC,CAAD,CAAhC;AAAqCC,QAAAA,SAAS,EAAEA,SAAS,CAAC,EAAD;AAAzD,OADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,QAAQ,EAAI;AACRF,QAAAA,QAAQ,EAAG,UADH;AAERC,QAAAA,SAAS,EAAG,0CAFJ;AAGRC,QAAAA,SAAS,EAAG;AAHJ,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,EAeI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAfJ,CADJ,CADJ;AAuBH;;AAhCiC;;AAmCtC,eAAeb,OAAf","sourcesContent":["import React from 'react';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport {Row, Button} from 'reactstrap';\r\n\r\nclass Queries extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n   handleSubmit(values) {\r\n       alert(\"Query submitted\" + JSON.stringify(values));\r\n   }\r\n    render(){\r\n        return(\r\n            <>\r\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n\r\n                        <Control.text model=\".name\" id=\"name\" className=\"form-control\" placeholder=\"Your Name\"\r\n                        validators = {{required, minLength : minLength(2), maxLength: maxLength(15)}} />\r\n                        <Errors className=\"text-danger\"\r\n                            model=\".name\" \r\n                            show=\"touched\"\r\n                            messages = {{\r\n                                required : 'Required',\r\n                                minLength : 'Name should atleast contain 2 characters',\r\n                                maxLength : 'Name can maximum 15 characters'\r\n                            }}/>\r\n                    </Row>\r\n\r\n                    <Row className=\"form-group\">\r\n                        <Button type=\"submit\" className=\"primary\"/>\r\n                    </Row>\r\n                </LocalForm>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Queries;"]},"metadata":{},"sourceType":"module"}